stages:
  - terraform
  - install
  - copy
  - deploy
  - destroy

before_script:
  - cd Terraform/dev/services/web-app && terraform init && export TF_INSTANCE_PUBLICIP=`terraform output public_ip` && cd ../../../../ && echo $TF_INSTANCE_PUBLICIP >> ./hosts/hosts && export ANSIBLE_HOSTS=`pwd`/hosts
  - which ssh-agent || ( apt update -y && apt install openssh-client -y ) && eval $(ssh-agent -s) && ssh-add <(echo "$PEM_SSH_KEY")

terraform:
  stage: terraform
  script:
    - cd Terraform/dev/services/web-app
    - terraform apply -auto-approve
  only:
    - master
  tags:
    - terraform

build:
  stage: install
  script: 
    - cd Client
    - npm install
    - npm run build
  only:
    - master
  tags:
    - terraform

install:
  stage: install
  script:
    - cd Ansible/playbooks/pipeline
    - ansible-playbook install-stage-play.yml -u ubuntu
  only:
    - master
  tags:
    - terraform

copy:
  stage: copy
  script:
    - cd Ansible/playbooks/pipeline
    - ansible-playbook copy-stage-play.yml -u ubuntu
  only:
    - master
  tags:
    - terraform

deploy:
  stage: deploy
  script:
    - cd Ansible/playbooks/pipeline
    - ansible-playbook deploy-stage-play.yml -u ubuntu
  only:
    - master
  tags:
    - terraform

destroy:
  when: manual
  stage: destroy
  script:
    - cd Terraform/dev/services/web-app
    - terraform destroy
  only:
    - master
  tags:
    - terraform
